name: Deploy to Railway

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    name: Build and Deploy to Railway
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Install Railway CLI
      run: |
        npm install -g @railway/cli
        railway --version

    - name: Deploy to Railway
      run: |
        railway login --token ${{ secrets.RAILWAY_TOKEN }}
        railway up --detach
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Run database migrations
      run: |
        railway run mix ecto.migrate
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Setup game data if needed
      run: |
        railway run mix setup_game_data --skip-migration || true
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Health check
      run: |
        # Wait for deployment to be ready
        sleep 30

        # Get the Railway domain
        DOMAIN=$(railway domain 2>/dev/null || echo "")

        if [ ! -z "$DOMAIN" ]; then
          echo "Checking health at https://$DOMAIN/health"

          # Retry health check up to 10 times
          for i in {1..10}; do
            if curl -f -s "https://$DOMAIN/health" > /dev/null; then
              echo "✅ Health check passed!"
              exit 0
            else
              echo "⏳ Health check failed, retrying in 30s... ($i/10)"
              sleep 30
            fi
          done

          echo "❌ Health check failed after 10 attempts"
          exit 1
        else
          echo "⚠️ Could not get Railway domain, skipping health check"
        fi
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Notify deployment success
      if: success()
      run: |
        DOMAIN=$(railway domain 2>/dev/null || echo "Railway deployment")
        echo "🚀 Deployment successful!"
        echo "🌐 Application URL: https://$DOMAIN"

        # Optional: Send notification to Discord, Slack, etc.
        # curl -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" \
        #   -H "Content-Type: application/json" \
        #   -d '{"content": "✅ AceApp deployed successfully to Railway!\n🌐 **URL:** https://'"$DOMAIN"'"}'
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Notify deployment failure
      if: failure()
      run: |
        echo "❌ Deployment failed!"
        railway logs --tail=50

        # Optional: Send failure notification
        # curl -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" \
        #   -H "Content-Type: application/json" \
        #   -d '{"content": "❌ AceApp deployment to Railway failed!\n📋 Check GitHub Actions for details."}'
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
